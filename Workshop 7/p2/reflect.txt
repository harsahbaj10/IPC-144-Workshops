///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #7
Full Name  : Harsahbaj Singh 
Student ID#: 146457221

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1)I was successful in coding the non-repetive part of the logic in this workshop. At first I struggled with the revealing the location of bombs and treasures as whenever my code went to the next iteration, the data for the last one disappeared, in order to correct this I used some more conditional statements and incorporated a history array to check whether the player have passed that particular place or not and if yes what did they find there a bomb,treasure or both, by using this particular method I was able to solve the problem with the ruler.

2) The use of structures in a program simplifies the code by organising all the related data into a single unit. The use of structures help in improving the readibility of the code as all the related data is organised into one place instead of being scattered into indiviual variables throughout the program. The variables are present at one place making it easier to understand the data and the program. It also simplifies the code and reduces duplication. Ultimately without structures the alternative code will involve handling each individual code seperately leading to them being scattered all around the code that will decrease the readibilty and increasing the length of the code.

3) The maximum number of levels of nesting I ended up using in my program logic is 3. The first was a 'do' loop used in printing the table and then inside it were several iterations and loops the deepeset it went was in line 227 of the code where a 'else' statement with further 'for' and 'if' statement is used.
   
  // Printing the table
  do {
          else
        {
            printf("  ");

            for (k = 0; k < game.pathlength; k++)
            {
                if (currentPosition[k] == 'V')
                {
                }
               
            }
        }            
      }




